/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * JInputList.java
 *
 * Created on 29 août 2011, 13:34:28
 */
package font_chooser;

import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.ListModel;
import javax.swing.ListSelectionModel;
import javax.swing.ScrollPaneConstants;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

/**
 *
 * @author Patrice
 */
public class JInputList extends JPanel {

  private String[] data;
  private String title;
  private String selected;
  private PropertyChangeSupport pcs = new PropertyChangeSupport(this);

  @Override
  public void addPropertyChangeListener(PropertyChangeListener listener) {
    this.pcs.addPropertyChangeListener(listener);
  }

  @Override
  public void removePropertyChangeListener(PropertyChangeListener listener) {
    this.pcs.removePropertyChangeListener(listener);
  }

  /** Creates new form JInputList */
  public JInputList() {
    data = new String[]{"1","2","3","4"};
    title = "1";
    initComponents();
  }

  public JInputList(String[] data, String title) {
    this.data = data;
    this.title = title;
    initComponents();
  }



  /** This method is called from within the constructor to
   * initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is
   * always regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    textField = new JTextField(title);
    jScrollPane = new JScrollPane();
    jList = new JList<String>(getData());

    setMinimumSize(new Dimension(72, 100));
    setPreferredSize(new Dimension(72, 100));
    setLayout(null);

    textField.setMinimumSize(new Dimension(80, 20));
    textField.setName("textfield"); // NOI18N
    textField.addActionListener(new ActionListener() {
      public void actionPerformed(ActionEvent evt) {
        textFieldActionPerformed(evt);
      }
    });
    add(textField);
    textField.setBounds(3, 1, 180, 30);

    jScrollPane.setHorizontalScrollBarPolicy(ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
    jScrollPane.setVerticalScrollBarPolicy(ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
    jScrollPane.setMinimumSize(new Dimension(50, 100));
    jScrollPane.setPreferredSize(new Dimension(72, 110));

    jList.setSelectionMode(ListSelectionModel.SINGLE_SELECTION);
    jList.setMaximumSize(new Dimension(100, 1000));
    jList.setMinimumSize(new Dimension(33, 80));
    jList.setPreferredSize(new Dimension(60,getData().length*25));
    jList.setVisibleRowCount(4);
    jList.addListSelectionListener(new ListSelectionListener() {
      public void valueChanged(ListSelectionEvent evt) {
        jListValueChanged(evt);
      }
    });
    jScrollPane.setViewportView(jList);

    add(jScrollPane);
    jScrollPane.setBounds(3, 35, 180, 100);
  }// </editor-fold>//GEN-END:initComponents




private void textFieldActionPerformed(ActionEvent evt) {//GEN-FIRST:event_textFieldActionPerformed
  ListModel model = jList.getModel();
  String key = textField.getText().toLowerCase();
  for (int k = 0; k < model.getSize(); k++) {
    String item = (String) model.getElementAt(k);
    if (item.toLowerCase().startsWith(key)) {
      jList.setSelectedValue(item, true);
      setSelected(item);
      break;
    }
  }
}//GEN-LAST:event_textFieldActionPerformed

private void jListValueChanged(ListSelectionEvent evt) {//GEN-FIRST:event_jListValueChanged
  Object obj = jList.getSelectedValue();
  if (obj != null) {
    textField.setText(obj.toString());
    setSelected(textField.getText());
  }
}//GEN-LAST:event_jListValueChanged



  public void setSelected(String sel) {
    String oldValue = selected;
    selected = sel;
    pcs.firePropertyChange("selected", oldValue, sel);
    jList.setSelectedValue(sel, true);
    textField.setText(sel);
  }

  public String getSelected() {
    return selected;
  }

  public void setSelectedInt(int value) {
    setSelected(Integer.toString(value));
  }

  public int getSelectedInt() {
    try {
      return Integer.parseInt(getSelected());
    } catch (NumberFormatException ex) {
      return -1;
    }
  }

public String[] getData() {
    return data;
  }

  public void setData(String[] data) {
    this.data = data;
  }

  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private JList jList;
  private JScrollPane jScrollPane;
  private JTextField textField;
  // End of variables declaration//GEN-END:variables


}
